// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WallpaperAPI;

#nullable disable

namespace WallpaperAPI.Migrations
{
    [DbContext(typeof(WallpaperDbContext))]
    [Migration("20250422124950_mg1")]
    partial class mg1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WallpaperAPI.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("CategoryID");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("WallpaperAPI.Wallpaper", b =>
                {
                    b.Property<int>("WallpaperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("WallpaperId");

                    b.ToTable("Wallpapers", (string)null);
                });

            modelBuilder.Entity("WallpaperAPI.WallpaperCategory", b =>
                {
                    b.Property<int>("WallpaperCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("WallpaperID")
                        .HasColumnType("int");

                    b.HasKey("WallpaperCategoryID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("WallpaperID");

                    b.ToTable("WallpaperCategory", (string)null);
                });

            modelBuilder.Entity("WallpaperAPI.WallpaperCategory", b =>
                {
                    b.HasOne("WallpaperAPI.Category", "Category")
                        .WithMany("WallpaperCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WallpaperAPI.Wallpaper", "Wallpaper")
                        .WithMany("WallpaperCategories")
                        .HasForeignKey("WallpaperID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Wallpaper");
                });

            modelBuilder.Entity("WallpaperAPI.Category", b =>
                {
                    b.Navigation("WallpaperCategories");
                });

            modelBuilder.Entity("WallpaperAPI.Wallpaper", b =>
                {
                    b.Navigation("WallpaperCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
